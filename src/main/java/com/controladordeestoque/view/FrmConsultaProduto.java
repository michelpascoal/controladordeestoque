/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.controladordeestoque.view;

import com.controladordeestoque.dao.ProdutoDAO;
import com.controladordeestoque.model.Produto;
import com.controladordeestoque.model.Categoria;
import java.util.List;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author juann
 */
public class FrmConsultaProduto extends javax.swing.JFrame {
    private ProdutoDAO produtoDAO;
    private DefaultTableModel tableModel;

    /**
     * Creates new form FrmConsultaProduto
     */
    public FrmConsultaProduto() {
        initComponents();
        inicializarLogicaConsulta();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBuscaProduto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        btnBuscarProduto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        txtBuscaProduto.setAutoscrolls(false);
        txtBuscaProduto.setMinimumSize(new java.awt.Dimension(75, 23));
        txtBuscaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaProdutoActionPerformed(evt);
            }
        });

        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nome", "Descrição", "Quantidade", "Validade", "Categoria"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Short.class, java.lang.String.class, java.lang.String.class, java.lang.Short.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProdutos.setOpaque(false);
        tblProdutos.setPreferredSize(new java.awt.Dimension(486, 267));
        tblProdutos.setShowGrid(false);
        jScrollPane1.setViewportView(tblProdutos);

        btnBuscarProduto.setText("Buscar");
        btnBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(txtBuscaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBuscarProduto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnBuscarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBuscaProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaProdutoActionPerformed
        
    }//GEN-LAST:event_txtBuscaProdutoActionPerformed

    private void btnBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProdutoActionPerformed
        executarBusca();
    }//GEN-LAST:event_btnBuscarProdutoActionPerformed
    private void inicializarLogicaConsulta() {
    System.out.println("FrmConsultaProduto: Iniciando inicializarLogicaConsulta()...");
    produtoDAO = new ProdutoDAO();

    
    String[] nomeColunas = {"Codigo", "Nome", "Descrição", "Quantidade", "Validade", "Categoria"};
    this.tableModel = new DefaultTableModel(nomeColunas, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }

        
        @Override
        public Class<?> getColumnClass(int columnIndex) {
            switch (columnIndex) {
                case 0: 
                    return Integer.class;
                case 3: 
                    return Integer.class;
                default: 
                    return String.class;
            }
        }
    };
    tblProdutos.setModel(this.tableModel); 
    System.out.println("FrmConsultaProduto: Novo DefaultTableModel criado e definido para tblProdutos.");

    carregarTodosProdutosNaTabela(); 
    configurarAcaoBotoesConsulta(); 

    this.setTitle("Consulta de Produtos");
    this.setLocationRelativeTo(null); 

   
    System.out.println("FrmConsultaProduto: Chamando revalidate() e repaint() no JFrame.");
    this.revalidate();
    this.repaint();
    
    
    if (jScrollPane1 != null) {
        System.out.println("FrmConsultaProduto: Chamando revalidate() e repaint() no jScrollPane1.");
        jScrollPane1.revalidate();
        jScrollPane1.repaint();
    }
    System.out.println("FrmConsultaProduto: Final de inicializarLogicaConsulta().");
}

   
    private void carregarTodosProdutosNaTabela() {
    System.out.println("FrmConsultaProduto: Iniciando carregarTodosProdutosNaTabela()...");
    tableModel.setRowCount(0); 

    List<Produto> listaDeProdutos = produtoDAO.listarTodos();
    SimpleDateFormat formatadorData = new SimpleDateFormat("dd/MM/yyyy"); 

    if (listaDeProdutos != null) {
        System.out.println("FrmConsultaProduto: Produtos encontrados no DAO: " + listaDeProdutos.size());
        for (Produto p : listaDeProdutos) {
            String nomeCategoria = "";
            if (p.getCategoria() != null) {
                nomeCategoria = p.getCategoria().getNome();
            }

            String dataValidadeFormatada = "";
            if (p.getValidade() != null) {
                dataValidadeFormatada = formatadorData.format(p.getValidade());
            }

            Object[] dadosDaLinha = {
                p.getId(),
                p.getNome(),
                p.getDescricao(),
                p.getQuantidade(),
                dataValidadeFormatada,
                nomeCategoria
            };
            tableModel.addRow(dadosDaLinha);
            System.out.println("FrmConsultaProduto: Produto adicionado à tabela: " + p.getNome());
        }
    } else {
        System.out.println("FrmConsultaProduto: listaDeProdutos é null."); 
    }
    System.out.println("FrmConsultaProduto: Finalizou carregarTodosProdutosNaTabela().");
}

    private void configurarAcaoBotoesConsulta() {
        
        btnBuscarProduto.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                acaoBuscarProduto();
            }
        });

        
    }

    
    private void executarBusca() {
        String termoBusca = txtBuscaProduto.getText().trim();

        if (termoBusca.isEmpty()) {
            carregarTodosProdutosNaTabela();
            return;
        }

        try {
            int idParaBuscar = Integer.parseInt(termoBusca);
            Produto produtoEncontrado = produtoDAO.buscarPorId(idParaBuscar);

            tableModel.setRowCount(0); 

            if (produtoEncontrado != null) {
                SimpleDateFormat formatadorData = new SimpleDateFormat("dd/MM/yyyy");
                String nomeCategoria = produtoEncontrado.getCategoria() != null ? produtoEncontrado.getCategoria().getNome() : "";
                String dataValidadeFormatada = produtoEncontrado.getValidade() != null ? formatadorData.format(produtoEncontrado.getValidade()) : "";

                Object[] dadosDaLinha = {
                    produtoEncontrado.getId(),
                    produtoEncontrado.getNome(),
                    produtoEncontrado.getDescricao(),
                    produtoEncontrado.getQuantidade(),
                    dataValidadeFormatada,
                    nomeCategoria
                };
                tableModel.addRow(dadosDaLinha);
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum produto encontrado com o código: " + idParaBuscar, "Busca sem Resultados", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Para buscar por código, digite um número.", "Tipo de Busca", JOptionPane.WARNING_MESSAGE);
        }
    }

   
    private void acaoBuscarProduto() {
         executarBusca();

}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConsultaProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConsultaProduto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarProduto;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTextField txtBuscaProduto;
    // End of variables declaration//GEN-END:variables
}
